# Generated by Django 4.1.6 on 2023-03-01 16:47
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='announcement',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=60)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_banner', models.BooleanField(default=False)),
                ('banner_url', models.URLField(max_length=600, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('index', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=25)),
                ('standard', models.BooleanField(default=False)),
                ('icon_url', models.URLField()),
                ('banner_url', models.URLField()),
                ('new', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Client3DS',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('consoleid', models.CharField(max_length=12)),
                ('devicetoken', models.CharField(max_length=21)),
                ('is_terminated', models.BooleanField(default=False)),
                ('balance', models.IntegerField(default=0)),
                ('language', models.CharField(max_length=3)),
                ('region', models.CharField(max_length=3)),
                ('country', models.CharField(max_length=3)),
                ('uniquekey', models.CharField(max_length=10)),
            ],
        ),    
        migrations.CreateModel(
            name='region',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=60)),
                ('initial', models.CharField(max_length=10)),
                ('desc', models.TextField(default='', blank=True, null=True)),
                ('flag_image_url', models.URLField(default='', blank=True, null=True)),
            ],
        ),  
        migrations.CreateModel(
            name='parentalControl',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('parental_system_name', models.CharField(max_length=10)),
                ('parental_system_id', models.IntegerField()),
                ('icon_url_normal', models.URLField()),
                ('icon_url_small', models.URLField()),
                ('age_number', models.IntegerField(default=0)),
                ('age_name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='descriptor',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('icon_url_normal', models.URLField(blank=True)),
                ('icon_url_small', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='genre',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='feature',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('type_number', models.IntegerField(blank=False, primary_key=False, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('icon_url_normal', models.URLField(blank=True)),
                ('icon_url_small', models.URLField(blank=True)),
                ('required', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='titleMovie',
            fields=[
                ('id', models.IntegerField(primary_key=True, blank=True)),
                ('name', models.CharField(max_length=255)),
                ('icon_url', models.URLField()),
                ('banner_url', models.URLField()),
                ('movie_url_hq', models.URLField(blank=True, null=True)),
                ('movie_url_lq', models.URLField()),
                ('time_in_sec', models.IntegerField()),
                ('is_3d', models.BooleanField(default=False)),
                ('new', models.BooleanField(default=False)), 
            ],
        ),
        migrations.CreateModel(
            name='keyword',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='language',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('iso_code', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='webSite',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('webSite_name', models.CharField(max_length=110)),
                ('url', models.URLField()),
                ('official', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='motd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='platform',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='publisher',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('publisher_name', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='redeemableCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('used', models.BooleanField(default=False)),
                ('is_money', models.BooleanField(default=True)),
                ('content', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='searchCategory',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=35)),
                ('platform_list', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('tid', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=150)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.region')),
                ('parentalControl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.parentalControl')),
                ('descriptor', models.ManyToManyField(blank=True, to='shopdeckdb.descriptor')),
                ('desc', models.TextField(blank=True, default='', null=True)),
                ('disclaimer', models.TextField(blank=True, default='', null=True)),
                ('thumbnail_url', models.TextField(max_length=10000)),
                ('top_image_url', models.CharField(blank=True, default='', max_length=600, null=True)),
                ('screenshot_upper_url', models.TextField(blank=True, default='', max_length=10000, null=True)),
                ('screenshot_lower_url', models.TextField(blank=True, default='', max_length=10000, null=True)),
                ('screenshot_merged_url', models.TextField(blank=True, default='', max_length=10000, null=True)),
                ('titleMovie', models.ManyToManyField(blank=True, to='shopdeckdb.titleMovie')),
                ('icon_url', models.CharField(max_length=600)),
                ('banner_url', models.CharField(max_length=600)),
                ('boxart_url', models.URLField(blank=True, max_length=600, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('product_code', models.CharField(max_length=30)),
                ('new', models.BooleanField(default=True)),
                ('public', models.BooleanField(default=True)),
                ('in_app_purchase', models.BooleanField(default=False)),
                ('price', models.IntegerField(default=0)),
                ('version', models.IntegerField(default=1024)),
                ('is_not_downloadable', models.BooleanField(default=False)),
                ('ticket_id', models.CharField(max_length=16)),
                ('ticket', models.TextField()),
                ('size', models.IntegerField(default=0)),
                ('ticket_available', models.BooleanField(default=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shopdeckdb.category')),
                ('genre', models.ManyToManyField(to='shopdeckdb.genre')),
                ('language', models.ManyToManyField(blank=True, to='shopdeckdb.language')),
                ('number_of_players', models.CharField(blank=True, max_length=6000, null=True)),
                ('webSite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.webSite')),
                ('copyright', models.CharField(blank=True, max_length=15000, null=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.platform')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.publisher')),
                ('keyword', models.ManyToManyField(blank=True, to='shopdeckdb.keyword')),
                ('feature', models.ManyToManyField(blank=True, to='shopdeckdb.feature')),
                ('target_player_everyone', models.IntegerField(blank=True, null=True)),
                ('target_player_gamers', models.IntegerField(blank=True, null=True)),
                ('play_style_casual', models.IntegerField(blank=True, null=True)),
                ('play_style_intense', models.IntegerField(blank=True, null=True)),
                ('rating_score', models.DecimalField(max_digits=5, decimal_places=2, default=0.00, blank=False, null=False)),
                ('number_of_votes', models.IntegerField(default=0)),
                ('number_of_star1', models.IntegerField(default=0)),
                ('number_of_star2', models.IntegerField(default=0)),
                ('number_of_star3', models.IntegerField(default=0)),
                ('number_of_star4', models.IntegerField(default=0)),
                ('number_of_star5', models.IntegerField(default=0)),
                ('fileCIA', models.URLField(blank=True, max_length=600, null=True)),
                ('file3DS', models.URLField(blank=True, max_length=600, null=True)),
                ('file3DSX', models.URLField(blank=True, max_length=600, null=True)),
                ('galery_image_url', models.TextField(blank=True, max_length=150000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='wishlistedTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.client3ds')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.title')),
            ],
        ),
        migrations.CreateModel(
            name='ownedTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.client3ds')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.title')),
            ],
        ),
        migrations.CreateModel(
            name='movie',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500)),
                ('thumbnail_url', models.URLField(max_length=600)),
                ('banner_url', models.URLField(max_length=600)),
                ('is_3d', models.BooleanField(default=False)),
                ('moflex_url', models.URLField(max_length=1000)),
                ('time_in_sec', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('new', models.BooleanField(default=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='category')),
            ],
        ),
        migrations.CreateModel(
            name='customTitleID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tid', models.CharField(max_length=18)),
                ('related_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.client3ds')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('linked_ds', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shopdeckdb.client3ds')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
